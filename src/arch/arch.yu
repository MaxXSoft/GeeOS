/*

all targets must define the following constants:

- FLASH_ADDR: i32:    boot flash address, used by the bootloader
- MEM_ADDR: i32:      physical memory start address
- MEM_SIZE_MIB: i32:  physical memory size (MiB)
- SWITCH_ADDR: i32:   address of GPIO switch
- LED_ADDR: i32:      address of GPIO led
- NUM_ADDR: i32:      address of GPIO segment display
- UART_ADDR: i32:     address of UART device
- UART_END: i32:      end address of UART device
- PLIC_ADDR: i32:     address of PLIC device
- PLIC_END: i32:      end address of PLIC device
- CLINT_MTIME: i32:   address of CLINT's 'mtime' register
- CLINT_MCMP: i32:    address of CLINT's 'mtimecmp' register

all targets must define the following functions:

- initIO: ():         initialize IO driver (like UART)
- initIntr: ():       initialize interrupt (PLIC)
- putChar: (u8):      put a character to IO
- getChar: (): i32:   get a character from IO
- halt: (i32):        halt the CPU, and return exit code (if possible)

*/


// use the following target
public import arch.target.virt

// halt the CPU
inline def halt() {
  halt(0)
}
